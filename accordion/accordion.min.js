/**
 * A simple accordion with some settings
 * 
 * @author Marvin Arlt
 * @date 2020-06-12
 * @version 1.2.0
 * 
 * Settings:
 *  selectors   - Use a standard CSS selector
 *  activeClass - Class for the active elements
 *  animation   - Toggle the animation
 *  openFirst   - Opens the first element on load
 *  forceOne    - Only one element can be open
 * 
 * Initialise example:
 *  var accordion = new Accordion({
 *      selectors: {
 *          container: '.accordionContainer',
 *          title: '.accordionTitle',
 *          content: '.accordionContent'
 *      },
 *      activeClass: 'accordionActive',
 *      animation: true,
 *      openFirst: false,
 *      forceOne: true
 *  });
 * 
 * HTML Markup:
 *  <div class="accordionContainer">
 *      <span class="accordionTitle">Your title ...</span>
 *      <div class="accordionContent">
 *          Your content ...
 *      </div>
 *  </div>
 */
function Accordion(t){const i=this,n={selectors:{container:".accordionContainer",title:".accordionTitle",content:".accordionContent"},activeClass:"accordionActive",animation:!0,openFirst:!1,forceOne:!0};this.init=function(){this.config=this.setConfig(t,n);const o=document.querySelectorAll(this.config.selectors.container);for(let t=0;t<o.length;t++){const n=o[t],s=n.querySelector(this.config.selectors.title),e=n.querySelector(this.config.selectors.content);this.setAnimation(e),0==t&&this.openFirst(n,e),s.onclick=function(){i.closeAll(o,n),i.toggle(n,e)}}},this.toggle=function(t,i){t.classList.contains(this.config.activeClass)?this.close(t,i):this.open(t,i)},this.open=function(t,i){t.classList.add(this.config.activeClass),i.style.height=i.scrollHeight+"px"},this.close=function(t,i){t.classList.remove(this.config.activeClass),i.style.height=null},this.closeAll=function(t,i){if(!this.config.forceOne)return!1;for(let n=0;n<t.length;n++){const o=t[n];if(i!==o){const t=o.querySelector(this.config.selectors.content);this.close(o,t)}}},this.setAnimation=function(t){this.config.animation&&(t.style.transitionDuration=2*t.scrollHeight+"ms")},this.openFirst=function(t,i){this.config.openFirst&&this.open(t,i)},this.setConfig=function(t,i){const n=new Object;if(void 0===t)return i;for(const o in i)"object"==typeof i[o]?n[o]=this.setConfig(t[o],i[o]):n[o]=t[o],t.hasOwnProperty(o)||(n[o]=i[o]);return n},this.init()}